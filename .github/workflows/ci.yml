name: CI
permissions:
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Set up Python
      run: uv python install 3.13

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}

    - name: Cache uv python downloads
      uses: actions/cache@v4
      with:
        path: ~/.local/share/uv/python
        key: ${{ runner.os }}-uv-python-${{ hashFiles('**/pyproject.toml') }}

    - name: Install dependencies for examples (fast path)
      run: |
        # Only sync/install dependencies for examples we run in tests.
        set -euo pipefail
        EXAMPLES="01-hello 02-binding 03-fastapi 04-query-d1 06-assets"
        for d in $EXAMPLES; do
          if [ -d "$d" ]; then
            echo "\n=== Syncing $d ==="
            cd "$d"
            # uv sync will vendor/install only what that example needs
            uv sync --dev || true
            # ensure pywrangler help runs (quick smoke) for examples that need it
            if [ -f "wrangler.toml" ]; then
              uv run pywrangler dev --help || true
            fi
            cd - >/dev/null
          fi
        done

    - name: Load Cloudflare token/account from repo file (optional)
      # Helpful if you deliberately keep a token file in the repo (NOT RECOMMENDED for public repos)
      # This step will set CLOUDFLARE_API_TOKEN and CF_ACCOUNT_ID from files if they exist:
      #  - .github/cloudflare_token
      #  - .github/cloudflare_account_id
      run: |
        set -euo pipefail
        if [ -f .github/cloudflare_token ]; then
          echo "Warning: loading Cloudflare token from .github/cloudflare_token (repo file). Ensure this repo is private and you understand the security risk." 1>&2
          echo "CLOUDFLARE_API_TOKEN=$(cat .github/cloudflare_token)" >> $GITHUB_ENV
          echo "CF_API_TOKEN=$(cat .github/cloudflare_token)" >> $GITHUB_ENV
        fi
        if [ -f .github/cloudflare_account_id ]; then
          echo "CF_ACCOUNT_ID=$(cat .github/cloudflare_account_id)" >> $GITHUB_ENV
        fi

    - name: Run tests
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      run: uv run pytest -vv
